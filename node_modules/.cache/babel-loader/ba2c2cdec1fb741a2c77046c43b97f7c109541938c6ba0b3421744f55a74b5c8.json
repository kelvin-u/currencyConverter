{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQueries } from '@tanstack/react-query';\nimport { useState } from 'react';\nimport { fetchRates, fetchSymbols } from '../api/fetchData';\nexport const useCurrency = () => {\n  _s();\n  var _ratesData$data, _ratesData$data2, _ratesData$data3;\n  const [amount, setAmount] = useState(1);\n  const [currencyOne, setCurrencyOne] = useState('USD');\n  const [currencyTwo, setCurrencyTwo] = useState('ETB');\n  const [ratesData, symbolsData] = useQueries({\n    queries: [{\n      queryKey: ['rates', currencyOne],\n      queryFn: () => fetchRates(currencyOne),\n      staleTime: Infinity,\n      select: _ref => {\n        let {\n          rates,\n          date,\n          timestamp\n        } = _ref;\n        return {\n          rates,\n          date,\n          timestamp\n        };\n      },\n      keepPreviousData: true\n    }, {\n      queryKey: ['symbols'],\n      queryFn: fetchSymbols,\n      staleTime: Infinity,\n      select: _ref2 => {\n        let {\n          symbols\n        } = _ref2;\n        return symbols;\n      }\n    }]\n  });\n  const isLoading = [ratesData, symbolsData].some(query => query.isLoading);\n  const isError = [ratesData, symbolsData].some(query => query.isError);\n  const convertedAmount = (((_ratesData$data = ratesData.data) === null || _ratesData$data === void 0 ? void 0 : _ratesData$data.rates[currencyTwo]) * amount).toFixed(2);\n  const date = new Date((_ratesData$data2 = ratesData.data) === null || _ratesData$data2 === void 0 ? void 0 : _ratesData$data2.date).toLocaleDateString();\n  const time = new Date((_ratesData$data3 = ratesData.data) === null || _ratesData$data3 === void 0 ? void 0 : _ratesData$data3.timestamp).toLocaleTimeString('en-US');\n  const currencyList = symbolsData.data ? Object.keys(symbolsData.data) : {};\n  return {\n    amount,\n    setAmount,\n    currencyOne,\n    setCurrencyOne,\n    currencyTwo,\n    setCurrencyTwo,\n    ratesData,\n    symbolsData,\n    isLoading,\n    isError,\n    convertedAmount,\n    date,\n    time,\n    currencyList\n  };\n};\n_s(useCurrency, \"jRh38Df8vRVG2my9GYfrOYwP1/Q=\", false, function () {\n  return [useQueries];\n});","map":{"version":3,"names":["useQueries","useState","fetchRates","fetchSymbols","useCurrency","_s","_ratesData$data","_ratesData$data2","_ratesData$data3","amount","setAmount","currencyOne","setCurrencyOne","currencyTwo","setCurrencyTwo","ratesData","symbolsData","queries","queryKey","queryFn","staleTime","Infinity","select","_ref","rates","date","timestamp","keepPreviousData","_ref2","symbols","isLoading","some","query","isError","convertedAmount","data","toFixed","Date","toLocaleDateString","time","toLocaleTimeString","currencyList","Object","keys"],"sources":["C:/Users/yukai/Desktop/coding/personal-projects/currency-converter/src/hooks/useCurrency.js"],"sourcesContent":["import { useQueries } from '@tanstack/react-query';\r\nimport { useState } from 'react';\r\nimport { fetchRates, fetchSymbols } from '../api/fetchData';\r\n\r\nexport const useCurrency = () => {\r\n  const [amount, setAmount] = useState(1);\r\n  const [currencyOne, setCurrencyOne] = useState('USD');\r\n  const [currencyTwo, setCurrencyTwo] = useState('ETB');\r\n\r\n  const [ratesData, symbolsData] = useQueries({\r\n    queries: [\r\n      {\r\n        queryKey: ['rates', currencyOne],\r\n        queryFn: () => fetchRates(currencyOne),\r\n        staleTime: Infinity,\r\n        select: ({ rates, date, timestamp }) => {\r\n          return { rates, date, timestamp };\r\n        },\r\n        keepPreviousData: true,\r\n      },\r\n      {\r\n        queryKey: ['symbols'],\r\n        queryFn: fetchSymbols,\r\n        staleTime: Infinity,\r\n        select: ({ symbols }) => symbols,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const isLoading = [ratesData, symbolsData].some((query) => query.isLoading);\r\n  const isError = [ratesData, symbolsData].some((query) => query.isError);\r\n\r\n  const convertedAmount = (ratesData.data?.rates[currencyTwo] * amount).toFixed(\r\n    2\r\n  );\r\n\r\n  const date = new Date(ratesData.data?.date).toLocaleDateString();\r\n  const time = new Date(ratesData.data?.timestamp).toLocaleTimeString('en-US');\r\n\r\n  const currencyList = symbolsData.data ? Object.keys(symbolsData.data) : {};\r\n\r\n  return {\r\n    amount,\r\n    setAmount,\r\n    currencyOne,\r\n    setCurrencyOne,\r\n    currencyTwo,\r\n    setCurrencyTwo,\r\n    ratesData,\r\n    symbolsData,\r\n    isLoading,\r\n    isError,\r\n    convertedAmount,\r\n    date,\r\n    time,\r\n    currencyList,\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,uBAAuB;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,EAAEC,YAAY,QAAQ,kBAAkB;AAE3D,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM,CAACc,SAAS,EAAEC,WAAW,CAAC,GAAGhB,UAAU,CAAC;IAC1CiB,OAAO,EAAE,CACP;MACEC,QAAQ,EAAE,CAAC,OAAO,EAAEP,WAAW,CAAC;MAChCQ,OAAO,EAAEA,CAAA,KAAMjB,UAAU,CAACS,WAAW,CAAC;MACtCS,SAAS,EAAEC,QAAQ;MACnBC,MAAM,EAAEC,IAAA,IAAgC;QAAA,IAA/B;UAAEC,KAAK;UAAEC,IAAI;UAAEC;QAAU,CAAC,GAAAH,IAAA;QACjC,OAAO;UAAEC,KAAK;UAAEC,IAAI;UAAEC;QAAU,CAAC;MACnC,CAAC;MACDC,gBAAgB,EAAE;IACpB,CAAC,EACD;MACET,QAAQ,EAAE,CAAC,SAAS,CAAC;MACrBC,OAAO,EAAEhB,YAAY;MACrBiB,SAAS,EAAEC,QAAQ;MACnBC,MAAM,EAAEM,KAAA;QAAA,IAAC;UAAEC;QAAQ,CAAC,GAAAD,KAAA;QAAA,OAAKC,OAAO;MAAA;IAClC,CAAC;EAEL,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAG,CAACf,SAAS,EAAEC,WAAW,CAAC,CAACe,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACF,SAAS,CAAC;EAC3E,MAAMG,OAAO,GAAG,CAAClB,SAAS,EAAEC,WAAW,CAAC,CAACe,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC;EAEvE,MAAMC,eAAe,GAAG,CAAC,EAAA5B,eAAA,GAAAS,SAAS,CAACoB,IAAI,cAAA7B,eAAA,uBAAdA,eAAA,CAAgBkB,KAAK,CAACX,WAAW,CAAC,IAAGJ,MAAM,EAAE2B,OAAO,CAC3E,CACF,CAAC;EAED,MAAMX,IAAI,GAAG,IAAIY,IAAI,EAAA9B,gBAAA,GAACQ,SAAS,CAACoB,IAAI,cAAA5B,gBAAA,uBAAdA,gBAAA,CAAgBkB,IAAI,CAAC,CAACa,kBAAkB,CAAC,CAAC;EAChE,MAAMC,IAAI,GAAG,IAAIF,IAAI,EAAA7B,gBAAA,GAACO,SAAS,CAACoB,IAAI,cAAA3B,gBAAA,uBAAdA,gBAAA,CAAgBkB,SAAS,CAAC,CAACc,kBAAkB,CAAC,OAAO,CAAC;EAE5E,MAAMC,YAAY,GAAGzB,WAAW,CAACmB,IAAI,GAAGO,MAAM,CAACC,IAAI,CAAC3B,WAAW,CAACmB,IAAI,CAAC,GAAG,CAAC,CAAC;EAE1E,OAAO;IACL1B,MAAM;IACNC,SAAS;IACTC,WAAW;IACXC,cAAc;IACdC,WAAW;IACXC,cAAc;IACdC,SAAS;IACTC,WAAW;IACXc,SAAS;IACTG,OAAO;IACPC,eAAe;IACfT,IAAI;IACJc,IAAI;IACJE;EACF,CAAC;AACH,CAAC;AAACpC,EAAA,CArDWD,WAAW;EAAA,QAKWJ,UAAU;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}